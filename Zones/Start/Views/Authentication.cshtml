@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Авторизация";
    Layout = "/Zones/Shared/_Layout.cshtml";
}

<div class="authentication__outer-block">
    <div class="authentication__inner-block">
        <div class="authentication__title-block">
            <div class="authentication__title-text">
                ИНСАНИЯ
            </div>
        </div>
        <div class="authentication__inputs-block">
            <input type="text" id="login" autocomplete="off" placeholder="Логин" class="authentication__inputs-input" />
            <div class="authentication__password-block">
                <input type="text" id="password-display" autocomplete="off" placeholder="Пароль" class="authentication__inputs-input" />
                <a id="password-toggle" class="authentication__password-visibility-button"
                   onmousedown="showPassword()" onmouseup="hidePassword()" onmouseleave="hidePassword()"
                   ontouchstart="showPassword()" ontouchend="hidePassword()" ontouchcancel="hidePassword()">
                    👁
                </a>
                <input type="hidden" id="password-real" />
            </div>
        </div>
        <div id="authentication_buttons" class="authentication__actions-block">
            <a class="authentication__actions-button">Войти</a>
            <a class="authentication__actions-button">Зарегистрироваться</a>
        </div>
        <div class="authentication__actions-block">
            <a class="authentication__actions-link">Забыли пароль?</a>
        </div>
    </div>
</div>

<script>
    //Объявление общих переменных
    let realPassword = ''; //реальный пароль
    let displayInput = document.getElementById('password-display'); //компонент отоброжаемого пароля
    let realInput = document.getElementById('password-real'); //компонент реального пароля
    let selectionStart = 0; //начало выделения
    let selectionEnd = 0; //конец выделение

    //Функция сохранения позиций выделения
    function saveSelection() {
        selectionStart = displayInput.selectionStart;
        selectionEnd = displayInput.selectionEnd;
    }

    //Функция восстановления позиций выделения
    function restoreSelection() {
        displayInput.setSelectionRange(selectionStart, selectionEnd);
    }

    //Функция обработки ввода пароля
    function handlePasswordInput(input) {
        //Сохранение позиций выделения
        saveSelection();

        //Получение значений
        const displayValue = input.value;
        const realValue = realInput.value;

        //Если длина отображаемого пароля больше реального
        if (displayValue.length > realValue.length) {
            //Получение длины добавленных символов
            const addedChars = displayValue.length - realValue.length;

            //Получение начальной позции всавки
            const insertPos = selectionStart - addedChars;

            //Получение всавленных символов
            const newChars = displayValue.substr(insertPos, addedChars);

            //Запись реального пароля
            realInput.value = realValue.substring(0, insertPos) + newChars + realValue.substring(insertPos);

            //Замена символов в отображаемом пароле
            input.value = realValue.substring(0, insertPos) + '•'.repeat(addedChars) + realValue.substring(insertPos);
        }
        //Если длина отображаемого пароля меньше реального
        else if (displayValue.length < realValue.length) {
            //Получение длины удалённых символов
            const deletedCount = realValue.length - displayValue.length;

            //Если было выделение
            if (selectionStart !== selectionEnd) {
                //Удаление выделенного текста
                realInput.value = realValue.substring(0, selectionStart) + realValue.substring(selectionEnd);

                //Замена символов в отображаемом пароле
                input.value = '•'.repeat(realInput.value.length);
            } 
            //В ином случае
            else {
                //Если удаление в середине
                if (selectionStart !== realValue.length - deletedCount) realInput.value = realValue.substring(0, selectionStart) + realValue.substring(selectionStart + deletedCount);
                //В ином случае
                else realInput.value = realValue.substring(0, realValue.length - deletedCount);

                //Замена символов в отображаемом пароле
                input.value = '•'.repeat(realInput.value.length);
            }
        }
        //В ином случае
        else {
            //Замена символов (при вставке поверх выделенного)
            input.value = '•'.repeat(realInput.value.length);
        }

        //Восстановление позиции выделения
        restoreSelection();
    }

    //Функция обработки нажатий клавиш
    function handleKeyDown(e) {
        //Сохранение позиций выделения
        saveSelection();

        //Передача браузеру возможности выполнить удаление и обработка изменений для клавиш удаления
        if (e.key === 'Backspace' || e.key === 'Delete') setTimeout(() => handlePasswordInput(displayInput), 0);
        //Для несистемных клавиш
        else if (e.key.length === 1 && !e.ctrlKey && !e.metaKey) {
            //Предотвращение стандартного поведения
            e.preventDefault();

            //Получение клавиши
            const newChar = e.key;

            //Получение реального пароля
            const currentReal = realInput.value;

            //Замена символов
            if (selectionStart !== selectionEnd) realInput.value = currentReal.substring(0, selectionStart) + newChar + currentReal.substring(selectionEnd);
            //Вставка символов
            else realInput.value = currentReal.substring(0, selectionStart) + newChar + currentReal.substring(selectionStart);

            //Замена символов в отображаемом пароле
            displayInput.value = '•'.repeat(realInput.value.length);

            //Восстановление выделения
            selectionStart = selectionStart + 1;
            selectionEnd = selectionStart;
            restoreSelection();
        }
    }

    //Функция обработки вставки
    function handlePaste(e) {
        //Предотвращение стандартного поведения
        e.preventDefault();

        //Сохранение позиций выделения
        saveSelection();

        //Получение вставляемого текста
        const pastedText = (e.clipboardData || window.clipboardData).getData('text');

        //Получение реального пароля
        const currentReal = realInput.value;

        //Замена символов
        if (selectionStart !== selectionEnd) realInput.value = currentReal.substring(0, selectionStart) + pastedText + currentReal.substring(selectionEnd);
        //Вставка символов
        else realInput.value = currentReal.substring(0, selectionStart) + pastedText + currentReal.substring(selectionStart);

        //Замена символов в отображаемом пароле
        displayInput.value = '•'.repeat(realInput.value.length);

        //Восстановление выделения
        selectionStart = selectionStart + pastedText.length;
        selectionEnd = selectionStart;
        restoreSelection();
    }

    //Функция обработки вырезания
    function handleCut(e) {
        //Предотвращение стандартного поведения
        e.preventDefault();

        //Сохранение позиций выделения
        saveSelection();

        //Замена символов
        if (selectionStart !== selectionEnd) {
            //Получение выделенного текста
            const selectedText = realInput.value.substring(selectionStart, selectionEnd);

            //Запись выделенного текста
            (e.clipboardData || window.clipboardData).setData('text', selectedText);

            //Запись реального пароля
            realInput.value = realInput.value.substring(0, selectionStart) + realInput.value.substring(selectionEnd);
            
            //Замена символов в отображаемом пароле
            displayInput.value = '•'.repeat(realInput.value.length);

            //Восстановление выделения
            selectionEnd = selectionStart;
            restoreSelection();
        }
    }

    //Функция показа пароля
    function showPassword() {
        //Отображение пароля, если он есть
        if (realInput.value.length > 0) displayInput.value = realInput.value;
    }

    //Функция скрытия пароля
    function hidePassword() {
        //Если есть пароль
        if (realInput.value.length > 0) {
            //Замена символов
            displayInput.value = '•'.repeat(realInput.value.length);

            //Восстановление выделения
            restoreSelection();
        }
    }

    //Инициализация
    document.addEventListener('DOMContentLoaded', function() {
        //Сохранении позиции при выделении
        displayInput.addEventListener('select', saveSelection);

        //Сохранении позиции при нажатии
        displayInput.addEventListener('click', saveSelection);

        //Сохранении позиции при фокусировке
        displayInput.addEventListener('focus', saveSelection);

        //Обработка ввода
        displayInput.addEventListener('input', function(e) { handlePasswordInput(this); });

        //Обработка нажатия на клавиши
        displayInput.addEventListener('keydown', function(e) { handleKeyDown(e); });

        //Обработка вставки
        displayInput.addEventListener('paste', function(e) { handlePaste(e); });

        //Обработка вырезания
        displayInput.addEventListener('cut', function(e) { handleCut(e); });
    });
</script>